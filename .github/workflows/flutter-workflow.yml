name: Flutter CI

on:
  push:
    branches:
      - main
permissions:
  contents: write

jobs:
  build-android:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable # or: beta, master (or main)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu" # See 'Supported distributions' for available options
          java-version: "21"
      - run: flutter build apk
      - run: cp build/app/outputs/apk/release/app-release.apk taxi-android.apk
      - uses: actions/upload-artifact@v4
        with:
          name: taxi-android.apk
          path: taxi-android.apk
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable # or: beta, master (or main)
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libunwind-dev
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good gstreamer1.0-plugins-bad
      - run: flutter build linux
      - run: sh -c "cd build/linux/x64/release/bundle && tar -czvf ../../../../../taxi-linux_x64.tar.gz . "
      - uses: actions/upload-artifact@v4
        with:
          name: taxi-linux_x64.tar.gz
          path: taxi-linux_x64.tar.gz
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter build windows
      - name: List files and update template
        run: |
          # Run the PowerShell script to update the installer files
          pwsh ./Installers/update-installer-files.ps1 `
      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.5
        with:
          path: Installers/innoSetupScript.iss
          options: /O+
      - uses: actions/upload-artifact@v4
        with:
          name: taxi.exe
          path: Installers/taxi.exe
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter build macos
      - run: cp -rf build/macos/Build/Products/Release/taxi.app Taxi.app
      - run: tar --preserve-permissions -czvf taxi-mac.tar.gz Taxi.app
      - uses: actions/upload-artifact@v4
        with:
          name: taxi-mac.tar.gz
          path: taxi-mac.tar.gz
  release:
    runs-on: ubuntu-22.04
    # needs: [build-linux]
    needs: [build-macos, build-linux, build-windows, build-android]
    steps:
      - uses: actions/checkout@v4
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %I:%M')"
      - name: Extract version from constants.dart
        id: version
        run: |
          VERSION=$(grep -o 'kVersionString = "[^"]*"' lib/helpers/constants.dart | sed 's/kVersionString = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"
      - name: Check if tag exists
        id: tag_check
        run: |
          if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "Tag v${{ steps.version.outputs.version }} already exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag v${{ steps.version.outputs.version }} does not exist"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: taxi-android.apk
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: taxi-linux_x64.tar.gz
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: taxi-mac.tar.gz
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: taxi.exe
          path: .
      - name: Rename artifacts
        run: |
          mv taxi.exe taxi-windows.exe
      - name: List downloaded artifacts
        run: ls -R .

      - uses: ncipollo/release-action@v1
        if: steps.tag_check.outputs.exists == 'false'
        with:
          artifacts: "taxi-android.apk,taxi-linux_x64.tar.gz,taxi-mac.tar.gz,taxi-windows.exe"
          tag: v${{ steps.version.outputs.version }}
          makeLatest: true
          name: "Release v${{ steps.version.outputs.version }} - ${{ steps.date.outputs.date }}"
          bodyFile: ".github/workflows/body.md"
      - name: Skip release - tag exists
        if: steps.tag_check.outputs.exists == 'true'
        run: |
          echo "::warning::Skipping release creation because tag v${{ steps.version.outputs.version }} already exists"
          echo "To create a new release, update the version in lib/helpers/constants.dart"

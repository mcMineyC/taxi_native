name: Flutter CI

on:
  push:
    branches:
      - main
permissions:
  contents: write 

jobs:
  build-android:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable # or: beta, master (or main)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
      - run: flutter build apk
      - run: cp build/app/outputs/apk/release/app-release.apk taxi-native.apk
      - uses: actions/upload-artifact@v4
        with:
          name: taxi-native.apk
          path: taxi-native.apk
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable # or: beta, master (or main)
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libunwind-dev zip
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good gstreamer1.0-plugins-bad
      - run: flutter build linux
      - run: sh -c "cd build/linux/x64/release/bundle && zip -r taxi-native-linux_x64.zip . && cp taxi-native-linux_x64.zip ../../../../../"
      - uses: actions/upload-artifact@v4
        with:
          name: taxi-native-linux_x64.zip
          path: taxi-native-linux_x64.zip
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter build windows
      - name: List files and update template
        run: |
          # Run the PowerShell script to update the installer files
          pwsh ./scripts/update-installer-files.ps1 `
      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.5
        with:
          path: Installers/innoSetupScript.iss
          options: /O+
      - uses: actions/upload-artifact@v4
        with:
          name: taxi.exe
          path: Installers/taxi.exe
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter build macos
      - run: cp -rf build/macos/Build/Products/Release/taxi.app taxi.app
      - run: zip -r taxi.app.zip taxi.app
      - uses: actions/upload-artifact@v4
        with:
          name: taxi.app.zip
          path: taxi.app.zip
  release:
    runs-on: ubuntu-22.04
    needs: [build-macos, build-linux, build-windows, build-android] 
    steps:
      - uses: actions/checkout@v4
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %I:%M')"
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: taxi-native.apk
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: taxi-native-linux_x64.zip
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: taxi.app.zip
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: taxi.exe
          path: .
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "taxi-native.apk,taxi-native-linux_x64.zip,taxi.app.zip"
          tag: ${{ steps.vars.outputs.sha_short }}
          makeLatest: true
          name: ${{ steps.date.outputs.date }}
          body: "## This was autoreleased via github actions"
